#!/bin/bash

if [ $# -ne 1 ]; then
  echo "Usage: getec2-cpumem.sh AWSprofileName "
  echo "./getec2-cpumem.sh AWSprofileName"
  exit 1
fi

AWS_PROFILE="$1"
output_file="ec2-instances-$AWS_PROFILE.csv"

# Get instances id mem cpu write output to ec2-instances-$AWS_PROFILE.csv
echo "instancesID,InstanceName,InstanceState,Platform,InstanceType,IPAddress,MEMORYINFO(GB),CpuCoreCount,Volume(GB)" > "$output_file"

aws ec2 describe-instances \
--query 'Reservations[*].Instances[*].[InstanceId, Tags[?Key==`Name`].Value | [0], State.Name, Platform, InstanceType, PrivateIpAddress]' \
--output json \
--profile "$AWS_PROFILE" | jq -r '.[][] | @csv' | tr -d '"' | while IFS=, read -r INSTANCE_ID INSTANCE_NAME INSTANCE_STATE PLATFORM INSTANCE_TYPE IP_ADDRESS; do
  CPU=$(aws ec2 describe-instance-types --query "InstanceTypes[?InstanceType=='$INSTANCE_TYPE'].VCpuInfo.DefaultVCpus" --output text --profile "$AWS_PROFILE")
  MEMORY=$(aws ec2 describe-instance-types --query "InstanceTypes[?InstanceType=='$INSTANCE_TYPE'].MemoryInfo.SizeInMiB" --output text --profile "$AWS_PROFILE")
  VOLUME=$(aws ec2 describe-volumes --filters Name=attachment.instance-id,Values=$INSTANCE_ID --query 'Volumes[*].[Size]' --output text --profile $AWS_PROFILE | awk '{s+=$1} END {print s}')
  # Convert memory MiB to GB
  MEMORY_GB=$(awk "BEGIN {printf  ${MEMORY}/1024}")
  
  # Write the output to the file
  echo "$INSTANCE_ID,$INSTANCE_NAME,$INSTANCE_STATE,$PLATFORM,$INSTANCE_TYPE,$IP_ADDRESS,$MEMORY_GB,$CPU,$VOLUME" >> "$output_file"
  
  # Print a message indicating the results were written to the file
  echo "Instance type $INSTANCE_ID ($INSTANCE_NAME) written to $output_file"
done

# Print a final message indicating the script has completed
echo "Script completed successfully. Output written to $output_file"
